Creating, editing, or deleting permissions requires an authenticated user. In most cases  if the authenticated user is the owner of the ACL then access is allowed, but granted roles also affect whether access is allowed. The default required role is @ROLE_ADMIN@ for all actions, but this can be configured in @grails-app/conf/Config.groovy@. This table summarizes the attribute names and the corresponding actions that are allowed for it:

{table}
*Attribute* | *Affected methods*
@grails.plugins.springsecurity.acl.authority.modifyAuditingDetails@ | @AuditableAcl.updateAuditing()@
@grails.plugins.springsecurity.acl.authority.changeOwnership@ | @OwnershipAcl.setOwner()@
@grails.plugins.springsecurity.acl.authority.changeAclDetails@ | @MutableAcl.deleteAce()@, @MutableAcl.insertAce()@, @MutableAcl.setEntriesInheriting()@, @MutableAcl.setParent()@, @MutableAcl.updateAce()@
{table}

You can leave the attributes set to @ROLE_ADMIN@ or change them to have separate values, e.g.

{code}
grails.plugins.springsecurity.acl.authority.modifyAuditingDetails = 'ROLE_ACL_MODIFY_AUDITING'
grails.plugins.springsecurity.acl.authority.changeOwnership =       'ROLE_ACL_CHANGE_OWNERSHIP'
grails.plugins.springsecurity.acl.authority.changeAclDetails =      'ROLE_ACL_CHANGE_DETAILS'
{code}

